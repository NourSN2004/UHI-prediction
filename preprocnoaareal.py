# -*- coding: utf-8 -*-
"""PreprocNOAAreal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Fk_fqoHxjqma38jzsl8j7MfHU1OCvKt
"""

# ===============================
# Step 1: Install & Mount Drive
# ===============================
!pip install pandas numpy

import pandas as pd
import numpy as np
from google.colab import drive
drive.mount('/content/drive')

# ===============================
# Step 2: Processing Function (Preserves 00:00 rows)
# ===============================
def process_new_data(file_path):
    """
    Reads and cleans a raw CSV containing NOAA hourly data already in Â°C.
    Keeps midnight rows even if wind is missing.
    """
    df = pd.read_csv(file_path)

    # Keep only the columns we need
    df = df[['DATE',
             'HourlyDryBulbTemperature',
             'HourlyDewPointTemperature',
             'HourlyRelativeHumidity',
             'HourlyWindSpeed',
             'HourlyPrecipitation']].copy()

    # Parse datetime
    df['datetime'] = pd.to_datetime(df['DATE'], errors='coerce')
    df.dropna(subset=['datetime'], inplace=True)

    # Convert special markers and numeric
    for col in ['HourlyDryBulbTemperature',
                'HourlyDewPointTemperature',
                'HourlyRelativeHumidity',
                'HourlyWindSpeed',
                'HourlyPrecipitation']:
        df[col] = df[col].replace({'T':0.005, 'M':np.nan})
        df[col] = pd.to_numeric(df[col], errors='coerce')

    # **Drop only if temperature or dew point missing** (keep wind = NaN)
    df.dropna(subset=['HourlyDryBulbTemperature', 'HourlyDewPointTemperature'], inplace=True)

    # Rename and build final columns
    df.rename(columns={
        'HourlyDryBulbTemperature':'air_temp_C',
        'HourlyDewPointTemperature':'dew_point_C',
        'HourlyRelativeHumidity':'relative_humidity_percent',
        'HourlyPrecipitation':'precipitation_in'
    }, inplace=True)

    # Convert wind speed when present
    df['wind_speed_m_s'] = df['HourlyWindSpeed']

    # OPTIONAL: interpolate missing wind speeds if you wish
    # df['wind_speed_m_s'] = df['wind_speed_m_s'].interpolate(method='time')

    # Interpolate precipitation gaps
    df['precipitation_in'] = df['precipitation_in'].interpolate(method='linear', limit_direction='both')

    return df[['datetime','air_temp_C','dew_point_C','relative_humidity_percent','wind_speed_m_s','precipitation_in']]

# ===============================
# Step 3: Load & Process
# ===============================
new_raw_csv_path = '/content/drive/MyDrive/nycc.csv'
df_new_clean = process_new_data(new_raw_csv_path)

# Check that midnight appears
print(df_new_clean['datetime'].head(15))

# ===============================
# Step 4: Save to CSV
# ===============================
output_csv_path = '/content/drive/MyDrive/preproccsv.csv'
df_new_clean.to_csv(output_csv_path, index=False)
print("Saved cleaned CSV with 00:00 rows preserved:", output_csv_path)